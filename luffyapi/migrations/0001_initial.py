# Generated by Django 2.1.5 on 2019-01-18 07:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='章节名')),
                ('chapter', models.IntegerField(verbose_name='章节号')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='章节介绍')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='发布日期')),
            ],
            options={
                'verbose_name_plural': '10. 课程章节',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, unique=True, verbose_name='课程名')),
                ('image', models.CharField(max_length=255, verbose_name='课程图片')),
                ('course_type', models.SmallIntegerField(choices=[(0, '付费'), (1, 'VIP专享'), (2, '学位课程模块')], verbose_name='专题课类型')),
                ('brief', models.TextField(max_length=2048, verbose_name='课程简介')),
                ('level', models.SmallIntegerField(choices=[(1, '初级'), (2, '中级'), (3, '高级')], default=2, verbose_name='难度')),
                ('pub_date', models.DateTimeField(blank=True, null=True, verbose_name='课程发布日期')),
                ('period', models.PositiveIntegerField(default=7, verbose_name='建议学习周期(days)')),
                ('order', models.IntegerField(help_text='从上一个课程数字往后排', verbose_name='课程顺序')),
                ('attachment_path', models.CharField(blank=True, max_length=128, null=True, verbose_name='课程课件路径')),
                ('status', models.SmallIntegerField(default=0, verbose_name='课程状态')),
                ('template_id', models.SmallIntegerField(default=1, verbose_name='前端模板ID')),
            ],
            options={
                'verbose_name_plural': '06. 专题课程表',
            },
        ),
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='课程类型')),
            ],
            options={
                'verbose_name_plural': '01. 课程大表',
            },
        ),
        migrations.CreateModel(
            name='CourseDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hours', models.IntegerField(verbose_name='课时')),
                ('course_slogan', models.CharField(blank=True, max_length=125, null=True, verbose_name='口号')),
                ('video_brief_link', models.CharField(blank=True, max_length=255, null=True, verbose_name='课程简介视频')),
                ('why', models.CharField(max_length=255, verbose_name='为什么报课程')),
                ('what_to_study_brief', models.TextField(verbose_name='将会学到什么')),
                ('career_improvement', models.TextField(verbose_name='此项目如何有助于我的职业生涯')),
                ('prerequisite', models.TextField(max_length=1024, verbose_name='课程先修条件')),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='luffyapi.Course', verbose_name='课程')),
                ('recommend_courses', models.ManyToManyField(blank=True, related_name='re_course', to='luffyapi.Course', verbose_name='相关推荐课程')),
            ],
            options={
                'verbose_name_plural': '07. 专题课程详情表',
            },
        ),
        migrations.CreateModel(
            name='CourseOutline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=1, verbose_name='显示顺序')),
                ('title', models.CharField(max_length=255, verbose_name='标题')),
                ('content', models.CharField(max_length=2048, verbose_name='大纲内容')),
                ('course_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='luffyapi.CourseDetail', verbose_name='课程详情')),
            ],
            options={
                'verbose_name_plural': '09. 大纲表',
            },
        ),
        migrations.CreateModel(
            name='CourseSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='课名')),
                ('order', models.IntegerField(help_text='建议每个课时之间空1至2个值，以备后续插入课时', verbose_name='课序')),
                ('section_type', models.SmallIntegerField(choices=[(0, '文档'), (1, '视频'), (2, '练习')], default=1, verbose_name='课类型')),
                ('section_link', models.CharField(help_text='如果是视频类型，填写vid,如果是文档，填link', max_length=255, verbose_name='连接文件')),
                ('video_time', models.CharField(blank=True, max_length=32, null=True, verbose_name='视频时长')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='发布日期')),
                ('free_trail', models.BooleanField(default=False, verbose_name='是否可试看')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='luffyapi.Chapters', verbose_name='章节')),
            ],
            options={
                'verbose_name_plural': '11. 课节表',
            },
        ),
        migrations.CreateModel(
            name='CourseSubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='子课程类型')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='luffyapi.CourseCategory', verbose_name='所属大分类')),
            ],
            options={
                'verbose_name_plural': '02. 课程子表',
            },
        ),
        migrations.CreateModel(
            name='DegreeCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='学位课程名')),
                ('course_img', models.CharField(max_length=255, verbose_name='课程示图')),
                ('brief', models.TextField(verbose_name='学位课程简介')),
                ('total_scholarship', models.PositiveIntegerField(default=40000, verbose_name='总奖学金(里贝)')),
                ('mentor_compensation_bonus', models.PositiveIntegerField(default=15000, verbose_name='本课程的导师辅导费用(里贝)')),
                ('period', models.PositiveIntegerField(default=150, verbose_name='建议学习周期（days)')),
                ('prerequisite', models.TextField(max_length=1024, verbose_name='课程先修要求')),
            ],
            options={
                'verbose_name_plural': '03. 学位课程表',
            },
        ),
        migrations.CreateModel(
            name='HomeWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='作业题目')),
                ('order', models.SmallIntegerField(help_text='同一课程的每个作业之前的order值间隔1-2个数', verbose_name='作业顺序')),
                ('homework_type', models.SmallIntegerField(choices=[(0, '作业'), (1, '模块通关考核')], default=0, verbose_name='作业类型')),
                ('requirement', models.CharField(max_length=1024, verbose_name='作业需求')),
                ('threshold', models.TextField(max_length=1024, verbose_name='踩分点')),
                ('recommend_period', models.PositiveSmallIntegerField(default=7, verbose_name='推荐完成周期(天)')),
                ('scholarship', models.PositiveSmallIntegerField(verbose_name='为该作业分配的奖学金(贝里)')),
                ('note', models.TextField(blank=True, null=True, verbose_name='注意提示')),
                ('enabled', models.BooleanField(default=True, help_text='本作业如果后期不需要了，不想让学员看到，可以设置为False')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='luffyapi.Chapters', verbose_name='章节')),
            ],
            options={
                'verbose_name_plural': '12. 章节作业',
            },
        ),
        migrations.CreateModel(
            name='OftenAskedQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255, verbose_name='常见问题')),
                ('answer', models.CharField(max_length=255, verbose_name='答案')),
                ('object_id', models.IntegerField(help_text='多个表的对象主键', verbose_name='关联对象ID')),
                ('content_type', models.ForeignKey(help_text='外键引用ContentType的主键', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='所属表的类型')),
            ],
            options={
                'verbose_name_plural': '08. 常见问题表',
            },
        ),
        migrations.CreateModel(
            name='PricePolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.PositiveSmallIntegerField(choices=[(1, '1天'), (3, '3天'), (7, '1周'), (14, '2周'), (30, '1个月'), (60, '2个月'), (90, '3个月'), (180, '6个月'), (210, '12个月'), (540, '18个月'), (720, '24个月')], verbose_name='学习周期')),
                ('price', models.FloatField()),
                ('object_id', models.IntegerField(verbose_name='课程对象')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='对应类型')),
            ],
            options={
                'verbose_name_plural': '13. 价格策略表',
            },
        ),
        migrations.CreateModel(
            name='Scholarship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_percent', models.PositiveIntegerField(help_text='只填写百分整数值，如90，代表90%', verbose_name='完成学位时间占比')),
                ('value', models.PositiveIntegerField(verbose_name='奖学金数额')),
                ('degree_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='luffyapi.DegreeCourse', verbose_name='学位课程')),
            ],
            options={
                'verbose_name_plural': '05. 学位奖学金表',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='老师名')),
                ('role', models.SmallIntegerField(choices=[(0, '讲师'), (1, '导师')], default=0, verbose_name='老师角色')),
                ('title', models.CharField(max_length=64, verbose_name='职位/职称')),
                ('signature', models.CharField(blank=True, max_length=255, null=True, verbose_name='签名')),
                ('image', models.CharField(max_length=255, verbose_name='老师照片')),
                ('brief', models.CharField(max_length=1024, verbose_name='老师简介')),
            ],
            options={
                'verbose_name_plural': '04. 老师表',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=64, verbose_name='用户名')),
                ('pwd', models.CharField(max_length=64, verbose_name='密码')),
            ],
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=128, verbose_name='token')),
                ('expired', models.DateTimeField(auto_now_add=True, verbose_name='有效期')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='luffyapi.UserInfo', verbose_name='用户')),
            ],
        ),
        migrations.AddField(
            model_name='degreecourse',
            name='teachers',
            field=models.ManyToManyField(to='luffyapi.Teacher', verbose_name='课程老师'),
        ),
        migrations.AddField(
            model_name='coursedetail',
            name='teachers',
            field=models.ManyToManyField(to='luffyapi.Teacher', verbose_name='任课老师'),
        ),
        migrations.AddField(
            model_name='course',
            name='degree_course',
            field=models.ForeignKey(blank=True, help_text='专题课程所属的学位课程,这里这填写关联的学位课程，可为空，表示不是学位课程', null=True, on_delete=django.db.models.deletion.SET_NULL, to='luffyapi.DegreeCourse', verbose_name='学位课程'),
        ),
        migrations.AddField(
            model_name='course',
            name='sub_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='luffyapi.CourseSubCategory', verbose_name='子课程分类'),
        ),
        migrations.AddField(
            model_name='chapters',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='luffyapi.Course', verbose_name='课程'),
        ),
        migrations.AlterUniqueTogether(
            name='pricepolicy',
            unique_together={('object_id', 'content_type', 'price')},
        ),
        migrations.AlterUniqueTogether(
            name='oftenaskedquestion',
            unique_together={('question', 'object_id', 'content_type')},
        ),
        migrations.AlterUniqueTogether(
            name='homework',
            unique_together={('chapter', 'title')},
        ),
        migrations.AlterUniqueTogether(
            name='coursesection',
            unique_together={('chapter', 'section_link')},
        ),
        migrations.AlterUniqueTogether(
            name='courseoutline',
            unique_together={('course_detail', 'title')},
        ),
        migrations.AlterUniqueTogether(
            name='chapters',
            unique_together={('course', 'chapter')},
        ),
    ]
